/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.HM.p1;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohd Ashraf
 */
public class CustomerUi extends javax.swing.JFrame {
    int x=0;
    Connection con;
    PreparedStatement select;
    DatabaseConnector db;
    ResultSet rs;
    String emp;
    /**
     * Creates new form CustomerUi
     */
    public CustomerUi() {
        initComponents();
        db = new DatabaseConnector();
        con = db.database_connect();
        tablereads();
        tables_show();
    }
    
    public CustomerUi(int flg){
        initComponents();
        db = new DatabaseConnector();
        con = db.database_connect();
        tablereads();
        tables_show();
        x = flg;
    }
    public CustomerUi(int flg,String id){
        initComponents();
        db = new DatabaseConnector();
        con = db.database_connect();
        tablereads();
        tables_show();
        x = flg;
        emp=id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_customer = new javax.swing.JTable();
        txtfld_name = new javax.swing.JTextField();
        txtfld_nid = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_return_ = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable_customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Customer NID", "Room No", "Contact ", "Check in", "Check out"
            }
        ));
        jTable_customer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_customerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_customer);

        btn_search.setText("Search");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("NID:");

        btn_return_.setText("Return");
        btn_return_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_return_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtfld_nid, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(txtfld_name))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_return_)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(btn_search)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btn_return_)
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfld_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfld_nid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(52, 52, 52)
                .addComponent(btn_search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tablereads()
    {
        String stat =  "SELECT CUS_NAME,CUS_NID,CUS_CONTACT,CHECK_IN,CHECK_OUT,ROOM_NAME ";
        stat += "FROM TEST.CUSTOMER JOIN TEST.BOOKING ";
        stat += "USING (CUSTOMER_ID) INNER JOIN TEST.ROOM USING (ROOM_ID)";
 
        System.out.println(stat);
        try
        {
            select = con.prepareStatement(stat);
            rs = select.executeQuery();
            
        }catch(SQLException ex){
             System.out.println(ex);
        }
          
    }
    
    private void tables_show(){
         try{
            DefaultTableModel df = (DefaultTableModel) jTable_customer.getModel();
            df.setRowCount(0);
            
            while(rs.next())
            {
               Vector v1 = new Vector();
               
               v1.add(rs.getString("CUS_NAME"));
               v1.add(rs.getString("CUS_NID"));
               v1.add(rs.getString("ROOM_NAME"));
               v1.add(rs.getString("CUS_CONTACT"));
               v1.add(rs.getDate("CHECK_IN"));
               v1.add(rs.getDate("CHECK_OUT"));
               
                df.addRow(v1);
               
               //df.addRow(v1);
            }
        }catch(SQLException ex)
        {
            System.out.println(ex);
        }
        
    }
    
    private void btn_return_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_return_ActionPerformed
        // TODO add your handling code here:
        if(x==2)
        {
            this.dispose();
            new RoomUi(x,emp).setVisible(true);
        }else{
            
            this.dispose();
            new MainMenuUi().setVisible(true);
            
        }
    }//GEN-LAST:event_btn_return_ActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        // TODO add your handling code here:
        String name,nid,tname,tnid;
        name = txtfld_name.getText().toString();
        nid = txtfld_nid.getText().toString();
        System.out.print(name+"  "+nid);
        
        DefaultTableModel df = (DefaultTableModel) jTable_customer.getModel();
        df.setRowCount(0);
        tablereads();
        if(!(name.isEmpty()) && !(nid.isEmpty()))
        {
            try {
                while(rs.next())
                {
                    tname = rs.getString("CUS_NAME").trim();
                    tnid = rs.getString("CUS_NID").trim();
                    System.out.print(tname+"  "+tnid);
                    if(tname.equals(name) && tnid.equals(nid))
                    {
                        Vector v1 = new Vector();
                        v1.add(rs.getString("CUS_NAME"));
                        v1.add(rs.getString("CUS_NID"));
                        v1.add(rs.getString("ROOM_NAME"));
                        v1.add(rs.getString("CUS_CONTACT"));
                        v1.add(rs.getDate("CHECK_IN"));
                        v1.add(rs.getDate("CHECK_OUT"));
               
                        df.addRow(v1);
                    }
                    
                }
            } catch (SQLException ex) {
               System.out.println(ex);
            }
        }else if(!(name.isEmpty()) && nid.isEmpty())
        {
            try {
                while(rs.next())
                {
                    tname = rs.getString("CUS_NAME").trim();
                    if(tname.equals(name))
                    {
                        Vector v1 = new Vector();
                        v1.add(rs.getString("CUS_NAME"));
                        v1.add(rs.getString("CUS_NID"));
                        v1.add(rs.getString("ROOM_NAME"));
                        v1.add(rs.getString("CUS_CONTACT"));
                        v1.add(rs.getDate("CHECK_IN"));
                        v1.add(rs.getDate("CHECK_OUT"));
               
                        df.addRow(v1);
                    }
                    
                }
            } catch (SQLException ex) {
               System.out.println(ex);
            }
        }else if(name.isEmpty() && !(nid.isEmpty())){
            try {
                while(rs.next())
                {
                    tnid = rs.getString("CUS_NID").trim();
                    if(nid.equals(nid))
                    {
                        Vector v1 = new Vector();
                        v1.add(rs.getString("CUS_NAME"));
                        v1.add(rs.getString("CUS_NID"));
                        v1.add(rs.getString("ROOM_NAME"));
                        v1.add(rs.getString("CUS_CONTACT"));
                        v1.add(rs.getDate("CHECK_IN"));
                        v1.add(rs.getDate("CHECK_OUT"));
               
                        df.addRow(v1);
                    }
                    
                }
            } catch (SQLException ex) {
               System.out.println(ex);
            }
        }
        else
        {
            tablereads();
            tables_show();
        }
            

        
    }//GEN-LAST:event_btn_searchActionPerformed

    private void jTable_customerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_customerMouseClicked
        // TODO add your handling code here:
         DefaultTableModel dt= (DefaultTableModel) jTable_customer.getModel();
        int row = jTable_customer.getSelectedRow();
        String nm = dt.getValueAt(row, 0).toString();
        txtfld_name.setText(nm);
        String id = dt.getValueAt(row, 1).toString();
        txtfld_nid.setText(id);
        
    }//GEN-LAST:event_jTable_customerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerUi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_return_;
    private javax.swing.JButton btn_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_customer;
    private javax.swing.JTextField txtfld_name;
    private javax.swing.JTextField txtfld_nid;
    // End of variables declaration//GEN-END:variables
}
